[{"content":"","date":"15 December 2023","permalink":"/tags/github-actions/","section":"Tags","summary":"","title":"github actions"},{"content":" Welcome to my weekly standups - a series where I share what I\u0026rsquo;m working on, thoughts rummaging around in my head, and what I\u0026rsquo;m excited for next week! üöÄ What I\u0026rsquo;m working on # I‚Äôve missed a week to recover from what I think was one of the worst bouts with the flu in my lifetime. Phew, glad that\u0026rsquo;s over (almost - that darn post-nasal drip).\nGitHub and its many edge cases # Docker Actions # Creating docker actions in javascript can work for many organizations, but for teams who perhaps come from different backgrounds/experiences and who want to avoid technical debt (using a language that people on the team don‚Äôt know so well), they might go the docker action route.\nThe setup for creating a python docker action is fairly straightforward:\nPython Docker Action Setup You have your action.yml, main.py (and any other files/code needed for the action i.e requirements.txt etc.), and your Dockerfile.\nNow when you‚Äôre in an enterprise environment, you may not like the fact that the Docker image registry defaults to public dockerhub. 1 2 3 4 5 FROM python:3-slim # This gets pulled from public dockerhub WORKDIR /app COPY . /app RUN pip install --target=/app -r requirements.txt CMD [\u0026#34;python\u0026#34;, \u0026#34;/app/main.py\u0026#34;] And even if you try to tag the image with your internal docker repository, GitHub doesn‚Äôt let you authenticate before trying to pull down the image when you call a docker action.\nThe workaround?\n1 2 3 4 5 container: image: ghcr.io/owner/image credentials: username: ${{ secrets.USER }} password: ${{ secrets.TOKEN }} Declare the job to run in a container and then call a shared script from another github repo to complete your work. It‚Äôs a bit messy, but it works!\n","date":"15 December 2023","permalink":"/standups/ws-6/","section":"Weekly Standups","summary":"Weekly Standup #6","title":"GitHub Actions, Edge-cases, and Workarounds"},{"content":" Curious when it comes to all things tech\n","date":"15 December 2023","permalink":"/","section":"Imran Ali","summary":"Curious when it comes to all things tech","title":"Imran Ali"},{"content":"","date":"15 December 2023","permalink":"/tags/platform-engineering/","section":"Tags","summary":"","title":"platform engineering"},{"content":"","date":"15 December 2023","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"15 December 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"15 December 2023","permalink":"/tags/weekly-standup/","section":"Tags","summary":"","title":"weekly standup"},{"content":"","date":"15 December 2023","permalink":"/series/weekly-standups/","section":"Series","summary":"","title":"Weekly Standups"},{"content":" I run this stand-up weekly to keep track of my progress and learnings as I grow üöÄ ","date":"15 December 2023","permalink":"/standups/","section":"Weekly Standups","summary":" I run this stand-up weekly to keep track of my progress and learnings as I grow üöÄ ","title":"Weekly Standups"},{"content":" Welcome to my weekly standups - a series where I share what I\u0026rsquo;m working on, thoughts rummaging around in my head, and what I\u0026rsquo;m excited for next week! üöÄ What I\u0026rsquo;m working on # ‚ÄòLegacy‚Äô apps can differ in meaning across various organizations. For a current project, I was tasked with ‚ÄúDevOpsifying‚Äù the build and deploy process for an ant application. It‚Äôs considered a legacy app solely due to the fact that it hasn\u0026rsquo;t migrated over to a more robust building tool like Maven or Gradle. The engaging team had a simple request: Help us build our application in the cloud using jenkins and publish the artifacts in a central location to later be deployed to our environments. Here‚Äôs what I learned:\nDependency Management # This particular ant application was referencing many local jar files. Paths were also hardcoded, and these dependencies weren‚Äôt being pulled from a central repository like maven-central. Herein lies the first problem - helping the dev team understand that building in the cloud means you have to change your approach with how you structure your application and build.xml file.\nLocal Build Setup First we have to reformat the build.xml file to reference relative paths in the source code or pre-built docker image that you use as a build agent. You also have to start storing the jars that are referenced in the app in a central binary repository like Artifactory. Doing it this way helps you identify which item in the build process has changed, whether it‚Äôs a dependency or source code.\nCloud Build Setup If the dev team still wishes to have the ability to build locally, you also have to warn the team about potential drift that may occur if they start to change things locally and not reflect these same changes in the build process for the cloud.\nNext week, I‚Äôll cover the deployment process for the legacy team.\nMusings # December is upon us - perhaps this is the year I try out advent of code. ","date":"1 December 2023","permalink":"/standups/ws-5/","section":"Weekly Standups","summary":"Weekly Standup #5","title":"Legacy Apps and DevOps"},{"content":" Welcome to my weekly standups - a series where I share what I\u0026rsquo;m working on, thoughts rummaging around in my head, and what I\u0026rsquo;m excited for next week! üöÄ What I\u0026rsquo;m working on # When defining the platform for GitHub Actions, it was first important to differentiate the environment setup vs. the developer platform setup.\nThe GitHub organization and teams strategy can differ greatly between companies. You may choose to have one large ORG under github with several TEAMS. Others may choose to have multiple ORGS depending on how large the company is.\nThe main point is this - when it comes to developer experience, it matters very little. The real crux of this setup falls on how locked-down you want the experience to be for teams to onboard to Github and administer their respective teams.\nExample multi-org structure in GitHub When it comes to the developer platforming side, the boxes highlighted in yellow is where the main effort should go into. This is where we can really make a difference to the developer experience and help teams deploy their code quickly, safely, and as often as possible.\nIf you come from an organization that mandates segregation of duties, you can look into having a dev repo (highlighted in blue) and an ops repo (highlighted in green). The reasoning behind this is due to the permissioning structure of GitHub and it‚Äôs repos. If you are a maintainer - you can remove or bypass any branch protection rules or environment rules that are in place, effectively negating their use in the first place. It also never looks good if both Dev and Ops have access to the same workflows and repos that deploy to both dev and production (especially with Audit). Take the safer route and split up the workflows, secrets, and configs used between each env in its own repo.\nExample structure of GitHub Platform In the coming weeks, I‚Äôll be mapping out a structure of workflows and rules to mandate in a company that\u0026rsquo;s using GitHub for its CI/CD process.\nRepos for the week # imranalley/go-track Go 0 0 Added solution for resistor-color Musings # What\u0026rsquo;s actually better for a build pipeline - defining the environment at runtime or creating a defined image prior to the build I know it can be a trade-off scenario and depands on multiple factors but we recently had this discussion at work that got me thinking about this ","date":"24 November 2023","permalink":"/standups/ws-4/","section":"Weekly Standups","summary":"Weekly Standup #4","title":"DevOps Platform Engineering for GitHub"},{"content":"","date":"17 November 2023","permalink":"/tags/devops/","section":"Tags","summary":"","title":"DevOps"},{"content":" Welcome to my weekly standups - a series where I share what I\u0026rsquo;m working on, thoughts rummaging around in my head, and what I\u0026rsquo;m excited for next week! üöÄ What I\u0026rsquo;m working on # It was a long weekend this week and the main thing thats been on my mind was JBBQ - tried it for the first time with co-workers and sad to say it derailed the rest of my week. Don‚Äôt make the same mistakes I made and make sure to drink plenty of water when taking in that much salt in one sitting :‚ÄôD.\nAn interesting bug I found out about this week was when I was testing the cloud pod templates we administer for the enterprise. When upgrading to jdk11 from jdk8, we decided to keep version 8 as a backup for those teams that weren‚Äôt ready for the switch. The problem lies in the call you make to install jdk8 within your image. The go to command is sudo yum install java-1.8.0-openjdk where you think that this command is installing the jdk - when in fact, it‚Äôs installing the JRE. When you ls -la /usr/lib/jvm/ you can see the symbolic links that eventually point to the jre. The solution? Simply adding -devel to the command: sudo yum install java-1.8.0-openjdk-devel\nRepos for the week # imranalley/go-track Go 0 0 progress was stalled for this week - aiming to get back on track with more intermediate exercises Musings # The CIA Triad refers to the tradeoffs you make between Confidentiality, Integrity, and Availability within security systems. With our current project of defining the platform for GitHub Enterprise Cloud, we have to figure out how to meet these segments within our processes. When you‚Äôre working with one platform to deploy to both dev and prod, coming up with segregation of duties, best practices, and secrets management becomes paramount to the success of the dev platform. I‚Äôm slowly starting to see my role as more of a platform engineering role - helping define the pipeline templates and guidelines for other teams across the enterprise to leverage for their deployment needs.\nIn other news:\nLooks like creators aren‚Äôt liking the new m3 pro laptops that apple has released https://youtu.be/Fv78mPxRp9A?si=QMtHr-3RwWQmTPS- https://youtu.be/XlX-GjICr6w?si=XbaAgVhK9Q8NDJGr Things I\u0026rsquo;m excited for next week # Engaging with a team for kickstarting their deployment process with Ant ","date":"17 November 2023","permalink":"/standups/ws-3/","section":"Weekly Standups","summary":"Weekly Standup #3","title":"The CIA Triad"},{"content":" Welcome to my weekly standups - a series where I share what I\u0026rsquo;m working on, thoughts rummaging around in my head, and what I\u0026rsquo;m excited for next week! üöÄ What I\u0026rsquo;m working on # Last week, I was writing up scripts that would let GitHub Enterprise Site Admins audit entire orgs within their enterprise servers. I used my open source GitHub action as a base layer and built on top of that. I intend to use my learnings here and update it with the new feature!\nThere also was a need to quickly make a script that would go through all CJE Jenkins controllers and the plugin\u0026rsquo;s that they have installed on them in preparation for a major upgrade. You can expect this being up on GitHub soon as well!\nRepos for the week # imranalley/go-track Go 0 0 Continuing my progress to learn golang added solutions for gigasecond, isogram, leap on exercism Musings # The current solution for enteprise pipeline templates lies with Jenkin\u0026rsquo;s Share pipeline libraries feature. How would this translate to a GitHub Action Pipeline library? Is this really the solution we want to go for or can we just start creating workflows and actions and then post them up on our internal github marketplace catelogue for consumption? Clearly, GitHub has been on my mind a lot :D\nIn other news:\nAre the M3 Macs really that good of an upgrade? Things I\u0026rsquo;m excited for next week # Starting to build out workflows to deploy to OCP4 ","date":"10 November 2023","permalink":"/standups/ws-2/","section":"Weekly Standups","summary":"Weekly Standup #2","title":"Laying the Groundwork"},{"content":"","date":"10 November 2023","permalink":"/tags/playform-engineering/","section":"Tags","summary":"","title":"playform engineering"},{"content":"","date":"3 November 2023","permalink":"/tags/audit/","section":"Tags","summary":"","title":"audit"},{"content":" Welcome to my weekly standups - a series where I share what I\u0026rsquo;m working on, thoughts rummaging around in my head, and what I\u0026rsquo;m excited for next week! üöÄ What I\u0026rsquo;m working on # Everyone\u0026rsquo;s favourite topic, audit. I\u0026rsquo;m preparing scripts that are self serve for teams across an enterprise to scan their Jenkins controller\u0026rsquo;s and return all the plugin\u0026rsquo;s they are currently using with the version numbers. We\u0026rsquo;re preparing for a major upgrade that\u0026rsquo;ll remove the support of dockershim based on the latest updates from kubernetes. Upgrades are always very procedural and you have to take things step by step, which I really like. The only thing you have to watch out for is to mitigate the unknown issues that may arise from these major upgrades (hence the audit). We\u0026rsquo;re combing through the enterprise pod templates and making sure that the newly upgraded platform can support the existing pods we have or if we may need to upgrade these images as well.\nRepos for the week # imranalley/go-track Go 0 0 Continuing my progress to learn golang Musings # Burning in the background is an enterprise strategy to shift our main DevOps CI/CD activities to GitHub Actions. It\u0026rsquo;s always interesting to plan out how to set up this enterprise offering so people can easily adopt to the platform and the controls you want to have in place to mitigate risk. Questions that come to mind:\nHow should we set up the organization/teams structure Should we lockdown secrets for the enterprise to push people to use the Enterprise approved tools (Vault/CyberArk) Runners compute and scaling solution How should we support open-source actions within the enterprise Adoption/migration strategy from Jenkins to GHA Things I\u0026rsquo;m excited for next week # Building out self-serve actions for the enterprise to audit their Jenkins plugins Blasting our pods and testing them to smithereens for our upgrade ","date":"3 November 2023","permalink":"/standups/ws-1/","section":"Weekly Standups","summary":"Weekly Standup #1","title":"Scaling DevOps Across an Enterprise"},{"content":" The Start of a Journey # For the longest time, I had a fear of public speaking. When I was promoted to a Senior DevOps Consultant role, I was thrown into a bunch of calls around cloud architecture and solutions that would fit an entire enterprise of 40,000+ employees. Needless to say, it was absolutely daunting. I was faced with the day-to-day tasks of talking with directors, managers, other senior engineers on my personal viewpoints when it came to engineering solutions. I quickly came to realize that improving my public speaking skills would greatly benefit not just my career but my whole life. Having an idea and then having the ability to communicate the idea to someone else effectively without little to no information loss is a SUPERPOWER and I wanted it.\nCue October 2022, when I signed up for a public speaking course at Speakwell. My coach, Jordyn, and I went through my biggest pain points when I came to public speaking. They revolved around communication structure, clarity, and mindset.\nMy Learnings # Having structures on command that you can use to articulate ideas This involves ordering information in the following structures: Chronological: Past, Present, Future Numerical: 1, 2, 3 Cost, Benefits, Analysis Cause/Effect: Cause, Short Term Effects, Long Term Effects Reducing Filler words and being comfortable with a pause Having a growth mindset and being able to brush off mistakes/hiccups when it comes to public speaking From my learnings, I went on to talk in a Software Circus where we chat about technical and non-technical topics. Afterwards, I had the opportunity to host the first ever Software Circus in Toronto as well! The team also knew of my goals when it came to public speaking and would pass my name along for opportunities to join webinars and internal conference calls. You can see one of the webinars with the Uptime community here.\nOverall, improving my public speaking was one of the best undertakings of my career and it‚Äôs a lifelong learning process. If you‚Äôre looking for someone to speak at a conference/webinar you‚Äôre organizing, feel free to reach out!\n","date":"18 September 2023","permalink":"/projects/public-speaking/","section":"Projects","summary":"The Start of a Journey # For the longest time, I had a fear of public speaking. When I was promoted to a Senior DevOps Consultant role, I was thrown into a bunch of calls around cloud architecture and solutions that would fit an entire enterprise of 40,000+ employees.","title":"My Public Speaking Journey"},{"content":" personal projects / blogs ","date":"18 September 2023","permalink":"/projects/","section":"Projects","summary":" personal projects / blogs ","title":"Projects"},{"content":" Why you need an audit action # Nobody likes Auditing. Even the auditing team (if you had a chance to ask them). The reason? Zero traceability of artifacts, attestations can be lost in transit, the bureaucratic nature of approvals and administration, just to name a few. One of the most common auditing scenarios is to audit repos where devs, ops, admins, and QA all work within the same repository. How can we keep track of changes to access levels within this repo in an automated way? Enter GitHub Actions.\nAuditing within GitHub # GitHub already has audit capabilities built in with Audit Log. The problem with this is that the built in search functionality would be manual work for your administrators. If a team ever had to do a quick audit on their repo, they would also have to reach out to the enterprise admins of their GitHub instance. Why create more tickets when this can be self-serviced and automated?\nCreating the Action # imranalley/enterprise-audit-action A GitHub Action that can be leveraged to audit enterprise github repos, teams, orgs, and users Python 2 0 The Enterprise Audit Action can be onboarded to very quickly.\nClone the repo to your github enterprise instance\u0026rsquo;s ./actions repo. Users can copy and paste the following to their .github/workflows folder: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 name: Enterprise Audit Action on: workflow_dispatch: jobs: audit: runs-on: ubuntu-latest steps: # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it - uses: actions/checkout@v3 # Use Enterprise Audit Action - name: Run a one-line script uses: # Enter the location where your ./actions repo is with: token: ${{ secrets.GH_TOKEN }} organization: # Org Name repository: # Repo Name owner: # Owner Name team: # Team Name user: # User\u0026#39;s Name audit: # Audit use case (must be 1 of the following: org, repo, team, or user) instance: # API endpoint as per your Enterprise GitHub Instance (public: https://api.github.com/graphql) - name: Publish CSV Report uses: actions/upload-artifact@v2 with: name: ghe-acl path: ghe-acl*.csv Feel free to edit other settings such as triggering the workflow every day on a cron schedule.\nThe token (L17) must have admin access based on the audit use case. If you are auditing at an organization level, the token must have admin access to the organization being audited. Run the workflow in your actions tab! ","date":"14 September 2023","permalink":"/projects/audit-action/","section":"Projects","summary":"Why you need an audit action # Nobody likes Auditing. Even the auditing team (if you had a chance to ask them). The reason? Zero traceability of artifacts, attestations can be lost in transit, the bureaucratic nature of approvals and administration, just to name a few.","title":"Enterprise Audit GitHub Action"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]